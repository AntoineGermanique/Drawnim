{"version":3,"sources":["src/index.js"],"names":["pressureVal","feedback","document","querySelector","giveFeedback","a","innerHTML","canvas","getElementById","ctx","getContext","painting","lastX","lastY","lineThickness","width","innerWidth","height","innerHeight","fillRect","drawStart","e","console","log","fillStyle","pageX","touches","offsetLeft","pageY","offsetTop","drawStop","drawMove","mouseX","mouseY","x1","x2","y1","y2","steep","Math","abs","x","y","dx","error","de","yStep","sqrt","force","addEventListener"],"mappings":";AAAA,IAAIA,EACEC,EAAWC,SAASC,cAAc,aAClCC,EAAe,SAAAC,GAAKJ,OAAAA,EAASK,UAAYD,GAG3CE,EAASL,SAASM,eAAe,UACjCC,EAAMF,EAAOG,WAAW,MACxBC,GAAW,EACXC,EAAQ,EACRC,EAAQ,EACRC,EAAgB,EAEpBP,EAAOQ,MAAQC,WAAW,GAC1BT,EAAOU,OAASC,YAAY,GAC5BT,EAAIU,SAAS,EAAG,EAAgB,EAAbH,WAA8B,EAAdE,aAEnC,IAAME,EAAY,SAAUC,GACxBC,QAAQC,IAAI,QAASF,GAErBV,GAAW,EACXF,EAAIe,UAAY,UAChBZ,EAAQS,EAAEI,MAAQJ,EAAEI,MAAQJ,EAAEK,QAAQ,GAAGD,MAAQ,KAAKE,WACtDd,EAAQQ,EAAEO,MAAQP,EAAEO,MAAQP,EAAEK,QAAQ,GAAGE,MAAQ,KAAKC,WAGpDC,EAAW,SAAUT,GACvBV,GAAW,GAGToB,EAAW,SAAUV,GACnBV,GAAAA,EAAU,CACVqB,OAASX,EAAEI,MAAQJ,EAAEI,MAAQJ,EAAEK,QAAQ,GAAGD,MAAQ,KAAKE,WACvDM,OAASZ,EAAEO,MAAQP,EAAEO,MAAQP,EAAEK,QAAQ,GAAGE,MAAQ,KAAKC,UAEnDK,IAAAA,EAAKF,OACLG,EAAKvB,EACLwB,EAAKH,OACLI,EAAKxB,EAGLyB,EAASC,KAAKC,IAAIH,EAAKD,GAAMG,KAAKC,IAAIL,EAAKD,GAC3CI,GAAAA,EAAO,CACHG,IAAAA,EAAIP,EACRA,EAAKE,EACLA,EAAKK,EAEDC,IAAAA,EAAIL,EACRA,EAAKF,EACLA,EAAKO,EAELR,GAAAA,EAAKC,EAAI,CACLM,EAAIP,EACRA,EAAKC,EACLA,EAAKM,EAEDC,EAAIN,EACRA,EAAKC,EACLA,EAAKK,EAGLC,IAAAA,EAAKR,EAAKD,EAEVU,EAAQ,EACRC,EAFKN,KAAKC,IAAIH,EAAKD,GAETO,EACVG,GAAS,EACTJ,EAAIN,EAEJA,EAAKC,IACLS,EAAQ,IAGZhC,EAAgB,EAAIyB,KAAKQ,MAAMZ,EAAKD,IAAOC,EAAKD,IAAOG,EAAKD,IAAOC,EAAKD,IAAO,IAC3D,IAChBtB,EAAgB,GAGdd,EADNqB,EAAEK,SAAWL,EAAEK,QAAQ,GACgB,EAArBL,EAAEK,QAAQ,GAAGsB,MACb,EACb,IAAIP,EAAIP,EAAIO,EAAIN,EAAIM,IACjBH,EACA7B,EAAIU,SAASuB,EAAGD,EAAGzC,EAAaA,GAEhCS,EAAIU,SAASsB,EAAGC,EAAG1C,EAAaA,IAOpC4C,GAASC,IACI,KACTH,GAAKI,EACLF,GAAS,GAMjBhC,EAAQoB,OACRnB,EAAQoB,OAGZ7B,EAAaJ,IAKjBO,EAAO0C,iBAAiB,YAAa7B,GACrCb,EAAO0C,iBAAiB,aAAc7B,GAEtCb,EAAO0C,iBAAiB,UAAWnB,GACnCvB,EAAO0C,iBAAiB,WAAYnB,GAEpCvB,EAAO0C,iBAAiB,YAAalB,GACrCxB,EAAO0C,iBAAiB,YAAalB","file":"src.00495986.js","sourceRoot":"..","sourcesContent":["var pressureVal\nconst feedback = document.querySelector('#feedback')\nconst giveFeedback = a => feedback.innerHTML = a\n\n\nvar canvas = document.getElementById(\"canvas\"),\n    ctx = canvas.getContext(\"2d\"),\n    painting = false,\n    lastX = 0,\n    lastY = 0,\n    lineThickness = 1;\n\ncanvas.width = innerWidth-20\ncanvas.height = innerHeight-20;\nctx.fillRect(0, 0, innerWidth * 4, innerHeight * 4);\n\nconst drawStart = function (e) {\n    console.log('force', e)\n\n    painting = true;\n    ctx.fillStyle = \"#ffffff\";\n    lastX = e.pageX ? e.pageX : e.touches[0].pageX - this.offsetLeft;\n    lastY = e.pageY ? e.pageY : e.touches[0].pageY - this.offsetTop;\n}\n\nconst drawStop = function (e) {\n    painting = false;\n}\n\nconst drawMove = function (e) {\n    if (painting) {\n        mouseX = e.pageX ? e.pageX : e.touches[0].pageX - this.offsetLeft;\n        mouseY = e.pageY ? e.pageY : e.touches[0].pageY - this.offsetTop;\n        // find all points between        \n        var x1 = mouseX,\n            x2 = lastX,\n            y1 = mouseY,\n            y2 = lastY;\n\n\n        var steep = (Math.abs(y2 - y1) > Math.abs(x2 - x1));\n        if (steep) {\n            var x = x1;\n            x1 = y1;\n            y1 = x;\n\n            var y = y2;\n            y2 = x2;\n            x2 = y;\n        }\n        if (x1 > x2) {\n            var x = x1;\n            x1 = x2;\n            x2 = x;\n\n            var y = y1;\n            y1 = y2;\n            y2 = y;\n        }\n\n        var dx = x2 - x1,\n            dy = Math.abs(y2 - y1),\n            error = 0,\n            de = dy / dx,\n            yStep = -1,\n            y = y1;\n\n        if (y1 < y2) {\n            yStep = 1;\n        }\n\n        lineThickness = 5 - Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 10;\n        if (lineThickness < 1) {\n            lineThickness = 1;\n        }\n        e.touches && e.touches[0] \n            ? pressureVal=e.touches[0].force * 2\n            : pressureVal=1\n        for (var x = x1; x < x2; x++) {\n            if (steep) {\n                ctx.fillRect(y, x, pressureVal, pressureVal);\n            } else {\n                ctx.fillRect(x, y, pressureVal, pressureVal);\n            }\n            // if (steep) {\n            //     ctx.fillRect(y, x, lineThickness , lineThickness );\n            // } else {\n            //     ctx.fillRect(x, y, lineThickness , lineThickness );\n            // }\n            error += de;\n            if (error >= 0.5) {\n                y += yStep;\n                error -= 1.0;\n            }\n        }\n\n\n\n        lastX = mouseX;\n        lastY = mouseY;\n\n    }\n    giveFeedback(pressureVal)\n}\n\n\n\ncanvas.addEventListener('mousedown', drawStart);\ncanvas.addEventListener('touchstart', drawStart);\n\ncanvas.addEventListener('mouseup', drawStop)\ncanvas.addEventListener('touchend', drawStop)\n\ncanvas.addEventListener('mousemove', drawMove)\ncanvas.addEventListener('touchmove', drawMove)"]}